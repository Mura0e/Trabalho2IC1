#include <stdio.h>
#include <locale.h>
#include <string.h>

struct cliente {
    char nome[100];
    int cpf[4];
    char endereco[150];
    int dataNas[3];
    int dataEmp[3];
    double emp;
    int numParc;
    double valorParc[10][2];
    int verReg;
    int verEmp;
    int dataVenc[3][10];
    int dataPag[3][10];
};

typedef struct cliente cliente;

int main() {

    setlocale(LC_ALL, "Portuguese");

    int opcao, i, i2, c, user, edit;
    char busca[100];
    cliente registro[100];

    for(i=0; i<100; i++) {
        registro[i].verReg=0;
        registro[i].verEmp=0;
        for(i2=0; i2<10; i2++){
            registro[i].valorParc[i2][0]=0;
            registro[i].valorParc[i2][1]=0;
        }
    }

    do {
        puts("-----Menu-----");
        puts("[1] - Registrar cliente");
        puts("[2] - Cadastrar emprestimo");
        puts("[3] - Marcar parcela como paga/não paga");
        puts("[4] - Vizualizar informações do cliente");
        puts("[5] - Editar informações do cliente");
        puts("[6] - Excluir cliente");
        puts("[7] - Sair");
        printf("Selecione uma opção: ");
        scanf("%d", &opcao);
        while((c = getchar()) != '\n' && c != EOF);
        switch(opcao) {
        case 1:
            for(i=0; i<100; i++) {
                if(registro[i].verReg == 0) {
                    user=i;
                    break;
                }
            }
            printf("\nInsira o nome completo do cliente: ");
            fgets(registro[user].nome, 99, stdin);
            printf("\n\nInsira o CPF do cliente (com . e -): ");
            scanf("%d.%d.%d-%d", &registro[user].cpf[0], &registro[user].cpf[1], &registro[user].cpf[2], &registro[user].cpf[3]);
            while((c=getchar()) != '\n' && c != EOF);
            printf("\n\nInsira a data de nascimento do cliente (dd/mm/aaaa): ");
            scanf("%d/%d/%d", &registro[user].dataNas[0], &registro[user].dataNas[1], &registro[user].dataNas[2]);
            while((c = getchar()) != '\n' && c != EOF);
            printf("\n\nInsira o endereço do cliente: ");
            fgets(registro[user].endereco, 149, stdin);
            registro[i].verReg=1;
            printf("\n\nCliente registrado!\n");
            break;
        case 2:
            printf("Aqui estão todos os clientes registrados:\n");
            for(i=0; i<100; i++) {
                if(registro[i].verReg == 1) {
                    printf("%s\n", registro[i].nome);
                }
            }
            printf("\n\nPara qual cliente gostaria de registrar um emprestimo? ");
            fgets(busca, 99, stdin);
            for(i=0; i<100; i++){
                if(strcmp(busca, registro[i].nome) == 0){
                break;
                }
            }
            if(i == 100 || registro[i].verReg == 0){
                printf("Usuário não encontrado!\n");
                break;
            }
            user=i;
            printf("Qual a data do emprestimo (dd/mm/aaaa)? ");
            scanf("%d/%d/%d", &registro[user].dataEmp[0], &registro[user].dataEmp[1], &registro[user].dataEmp[2]);
            while((c=getchar()) != '\n' && c != EOF);
            printf("\n\nQual o valor total do emprestimo em reais? ");
            scanf("%lf", &registro[user].emp);
            while((c = getchar()) != '\n' && c != EOF);
            if(registro[user].emp > 10000 || registro[user].emp <0){
                printf("Esse valor não é válido para um emprestimo!");
                break;
            }
            printf("\n\nEm quantas parcelas o emprestimo será pago? ");
            scanf("%d", &registro[user].numParc);
            if(registro[user].numParc > 10 || registro[user].numParc <1){
                printf("Este não é um número de parcelas válido\n");
                break;
            }
            for(i=0; i<registro[user].numParc; i++){
                printf("\nQual o valor da parcela %d? ", i+1);
                scanf("%lf", &registro[user].valorParc[i][0]);
                while((c = getchar()) != '\n' && c != EOF);
            }
            registro[user].verEmp=1;
            printf("\nEmprestimo para o cliente %s foi registrado!\n", registro[user].nome);
            break;
        case 3:
            printf("Aqui estão todos os clientes registrados:\n");
            for(i=0; i<100; i++) {
                if(registro[i].verReg == 1) {
                    printf("%s\n", registro[i].nome);
                }
            }
            printf("Para qual cliente gostaria de alterar o estado da parcela? ");
            fgets(busca, 99, stdin);
            for(i=0; i<100; i++){
                if(strcmp(registro[i].nome, busca) == 0){
                    break;
                }
            }
            if(i == 100 || registro[i].verReg == 0){
                printf("Usuário não encontrado!\n");
                break;
            }
            user=i;
            printf("Aqui estão as parcelas não pagas do cliente:\n");
            for(i=0; i<registro[user].numParc; i++){
                printf("%d\t", i+1);
                printf("%.2lf\t", registro[user].valorParc[i][0]);
                if(registro[user].valorParc[i][1] == 1){
                    puts("Paga");
                }
                else{
                    puts("Não paga");
                }
            }
            printf("\n\nQual o número da parcela cujo estado será alterado? ");
            scanf("%d", &i);
            while((c=getchar()) != '\n' && c != EOF);
            i--;
            if(registro[user].valorParc[i][1] == 0){
                registro[user].valorParc[i][1]=1;
                printf("Qual a data do pagamento da parcela? (dd/mm/aaaa) ");
                scanf("%d/%d/%d", &registro[user].dataPag[0][i], &registro[user].dataPag[1][i], &registro[user].dataPag[2][i]);
                printf("A parcela %d foi marcada como paga!\n", i+1);
                break;
            }
            else{
                registro[user].valorParc[i][1]=0;
                printf("A parcela %d foi marcada como não paga!\n", i+1);
            }
            break;
        case 4:
            printf("Aqui estão todos os clientes registrados:\n");
            for(i=0; i<100; i++) {
                if(registro[i].verReg == 1) {
                    printf("%s\n", registro[i].nome);
                }
            }
            printf("Qual o cliente cujas informações devem ser mostradas? ");
            fgets(busca, 99, stdin);
            for(i=0; i<100; i++){
                if(strcmp(registro[i].nome, busca) == 0){
                    break;
                }
            }
            if(i == 100 || registro[i].verReg == 0){
                printf("Usuário não encontrado!\n");
                break;
            }
            user=i;
            puts("Aqui estão as informações do cliente:\n");
            printf("Nome: %s", registro[user].nome);
            printf("Data de nascimento: %d/%d/%d", registro[user].dataNas[0], registro[user].dataNas[1], registro[user].dataNas[2]);
            printf("\nCPF: %d.%d.%d-%d", registro[user].cpf[0], registro[user].cpf[1], registro[user].cpf[2], registro[user].cpf[3]);
            printf("\nEndereço: %s", registro[user].endereco);
            if(registro[user].verEmp == 1){
                printf("\nValor do emprestimo: %.2lf", registro[user].emp);
                printf("\nData do emprestimo: %d/%d/%d", registro[user].dataEmp[0], registro[user].dataEmp[1], registro[user].dataEmp[2]);
                printf("\nParcelas do emprestimo:\n ");
            }
            else{
                printf("Este cliente não possui um emprestimo ou ocorreu um erro em sua ultima atualização do emprestimo!\n");
            }
            for(i=0; i<registro[user].numParc; i++){
                if(registro[user].valorParc[i][1] == 0){
                    printf("Parcela %d: %lf (Não paga. Vencimento em %d/%d/%d)\n", i+1, registro[user].valorParc[i][0], registro[user].dataVenc[0][i], registro[user].dataVenc[1][i], registro[user].dataVenc[2][i]);
                }
                else{
                    printf("Parcela %d: %lf (Paga em %d/%d/%d)\n", i+1, registro[user].valorParc[i][0], registro[user].dataPag[0][i], registro[user].dataPag[1][i], registro[user].dataPag[2][i]);
                }
            }
            break;
        case 5:
            printf("Aqui estão todos os clientes registrados:\n");
            for(i=0; i<100; i++) {
                if(registro[i].verReg == 1) {
                    printf("%s\n", registro[i].nome);
                }
            }
            printf("Qual o cliente cujas informações devem ser alteradas? ");
            fgets(busca, 99, stdin);
            for(i=0; i<100; i++){
                if(strcmp(registro[i].nome, busca) == 0){
                    break;
                }
            }
            if(i == 100 || registro[i].verReg == 0){
                printf("Usuário não encontrado!\n");
                break;
            }
            user=i;
            puts("Qual informação deve ser alterada?");
            puts("[1] - Nome");
            puts("[2] - Endereco");
            puts("[3] - CPF");
            puts("[4] - Data de nascimento");
            puts("[5] - Informações do emprestimo");
            printf("Sua opção: ");
            scanf("%d", &edit);
            while((c=getchar()) != '\n' && EOF);
            switch(edit){
                case 1:
                    printf("Insira o novo nome para o cliente: ");
                    fgets(registro[user].nome, 99, stdin);
                    printf("O nome do cliente foi atualizado!\n");
                    break;
                case 2:
                    printf("Insira o novo endereço do cliente: ");
                    fgets(registro[user].endereco, 149, stdin);
                    printf("O endereço do cliente foi atualizado!\n");
                    break;
                case 3:
                    printf("Insira a correção do CPF (com . e -): ");
                    scanf("%d.%d.%d-%d", &registro[user].cpf[0], &registro[user].cpf[1], &registro[user].cpf[2], &registro[user].cpf[3]);
                    while((c=getchar()) != '\n' && c != EOF);
                    printf("O CPF foi corrigido!\n");
                    break;
                case 4:
                    printf("Insira a correção da data de nascimento: ");
                    scanf("%d/%d/%d", &registro[user].dataNas[0], &registro[user].dataNas[1], &registro[user].dataNas[2]);
                    while((c = getchar()) != '\n' && c != EOF);
                    printf("A data de nascimento foi corrigida!\n");
                    break;
                case 5:
                    registro[user].verEmp=0;
                    for(i=0; i<10; i++){
                        registro[user].valorParc[i][1]=0;
                        
                    }
                    printf("Qual a nova data do emprestimo (dd/mm/aaaa)? ");
                    scanf("%d/%d/%d", &registro[user].dataEmp[0], &registro[user].dataEmp[1], &registro[user].dataEmp[2]);
                    while((c=getchar()) != '\n' && c != EOF);
                    printf("\n\nQual o novo valor total do emprestimo em reais? ");
                    scanf("%lf", &registro[user].emp);
                    while((c = getchar()) != '\n' && c != EOF);
                    if(registro[user].emp > 10000 || registro[user].emp <0){
                        printf("Esse valor não é válido para um emprestimo!");
                        break;
                    }
                    printf("\n\nEm quantas parcelas o novo emprestimo será pago? ");
                    scanf("%d", &registro[user].numParc);
                    if(registro[user].numParc > 10 || registro[user].numParc <1){
                        printf("Este não é um número de parcelas válido");
                        break;
                    }
                    for(i=0; i<registro[user].numParc; i++){
                                        registro[user].dataVenc[0][i]=registro[user].dataEmp[0];
                                        registro[user].dataVenc[1][i]=registro[user].dataEmp[1]+i+1;
                                        registro[user].dataVenc[2][i]=registro[user].dataEmp[2];
                                        if(registro[user].dataVenc[0][i] > 30 && registro[user].dataVenc[1][i] == 4 || registro[user].dataVenc[1][i] == 6 || registro[user].dataVenc[1][i] == 9 || registro[user].dataVenc[1][i] == 11){
                                        registro[user].dataVenc[0][i]-=30;
                                        registro[user].dataVenc[1][i]+=1;
                }
                if(registro[user].dataVenc[0][i] > 28){
                    if(registro[user].dataVenc[0][i] == 29 && registro[user].dataVenc[2][i]%4 == 0){
                        break;
                    }
                    else{
                        registro[user].dataVenc[0][i]-=28;
                        registro[user].dataVenc[1][i]+=1;
                    }
                }
                if(registro[user].dataVenc[1][i] > 12){
                    registro[user].dataVenc[1][i]-=12;
                    registro[user].dataVenc[2][i]+=1;
                }
                        printf("\nQual o valor da parcela %d? ", i+1);
                        scanf("%lf", &registro[user].valorParc[i][0]);
                        while((c = getchar()) != '\n' && c != EOF);
                    }
                    registro[user].verEmp=1;
                    printf("\nEmprestimo para o cliente %s foi alterado!\n", registro[user].nome);
                    break;
                }
            break;
        case 6:
            printf("Aqui estão todos os clientes registrados:\n");
            for(i=0; i<100; i++){
                if(registro[i].verReg == 1){
                    printf("%s\n", registro[i].nome);
                }
            }
            printf("Qual cliente deseja excluir? ");
            fgets(busca, 99, stdin);
            for(i=0; i < 100; i++){
                if((strcmp(busca, registro[i].nome)) == 0){
                    break;
                }
            }
            if(i == 100 || registro[i].verReg == 0){
                printf("Cliente não encontrado!\n");
                break;
            }
            user=i;
            registro[user].verReg=0;
            registro[user].verEmp=0;
            printf("Cliente excluido com sucesso!\n");
            break;
        case 7:
            printf("Encerrando..\n");
            break;
        default:
            printf("Essa não é uma opção válida!\n");
            break;
        }   //chave switch grande
    }   //chave do
    while(opcao != 7);
    return 0;
}//chave main
